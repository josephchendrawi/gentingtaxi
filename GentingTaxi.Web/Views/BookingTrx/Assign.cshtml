@model GentingTaxi.Models.BookingTrx
@{
    ViewBag.Title = "BookingTrx Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Title { @ViewBag.Title }
@section Styles {
    <!-- DATA TABLES -->
    <link href="@Url.Content("~/Content/plugins/datatables/dataTables.bootstrap.css")" rel="stylesheet" type="text/css" />
}
@section ContentHeader{
    <a class="btn btn-flat btn-@Model.StatusVM.StatusColor no-event">
        @Model.StatusVM.StatusName
    </a>
}

<div class="row">
    <div class="col-md-12">
        <!-- Available Drivers -->
        <div class="box box-success">
            <div class="box-header">
                <h3 class="box-title">Available Drivers</h3> <a id="btn-refresh" class="btn btn-sm btn-success pull-right"><i class="fa fa-refresh"></i> Refresh</a>
            </div><!-- /.box-header -->
            <div class="box-body">
                <a id="btn-sort-nearest" class="btn btn-sm btn-default"><i class="fa fa-sort"></i> Sort by Nearest Driver</a>
                <a id="btn-sort-lastupdated" class="btn btn-sm btn-default"><i class="fa fa-sort"></i> Sort by Last Updated Driver</a>
                <table id="tbl-list" class="table table-striped table-bordered table-hover table-condensed">
                    <thead>
                        <tr>
                            <th></th>
                            <th>@Html.LabelFor(m => m.Driver.Name)</th>
                            <th>@Html.LabelFor(m => m.Driver.Phone)</th>
                            <th>@Html.LabelFor(m => m.Driver.CarPlateNo)</th>
                            <th>@Html.LabelFor(m => m.Driver.LastUpdated)</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div><!-- /.box-body -->
        </div><!-- /.box -->
    </div>

    <!-- left column -->
    <div class="col-md-7">
        <!-- Booking Details -->
        <div class="box box-warning">
            <div class="box-header">
                <h3 class="box-title">Booking Details</h3>
            </div><!-- /.box-header -->
            <div class="box-body">
                <div class="form-group">
                    @Html.LabelFor(m => m.BookingDateTime)
                    <div>
                        @if (Model.BookingDateTime != null)
                        {
                            @Model.BookingDateTime.Value.ToString("dd MMM yyyy hh:mm tt")
                        }
                        else
                        {
                            @Html.Raw("-")
                        }
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.RequestCarType)
                    <div>
                        @Model.RequestCarTypeName
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.EstDistance)
                    <div>
                        @Model.EstDistance
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.EstFares)
                    <div>
                        @Model.EstFares
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Start)
                    <div>
                        @if (Model.Start != null)
                        {
                            @Model.Start.Value.ToString("dd MMM yyyy hh:mm tt")
                        }
                        else
                        {
                            @Html.Raw("-")
                        }
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.End)
                    <div>
                        @if (Model.End != null)
                        {
                            @Model.End.Value.ToString("dd MMM yyyy hh:mm tt")
                        }
                        else
                        {
                            @Html.Raw("-")
                        }
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Remarks)
                    <div>
                        @Model.Remarks
                    </div>
                </div>
            </div><!-- /.box-body -->
        </div><!-- /.box -->
    </div><!--/.col (left) -->

    <!-- right column -->
    <div class="col-md-5">
        <!-- User Details -->
        <div class="box box-primary">
            <div class="box-header">
                <h3 class="box-title">User</h3>
            </div><!-- /.box-header -->
            <div class="box-body">
                <div class="form-group">
                    @Html.LabelFor(m => m.User.Name)
                    <div>
                        @Model.User.Name
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.User.Username)
                    <div>
                        @Model.User.Username
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.User.Email)
                    <div>
                        @Model.User.Email
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.User.Phone)
                    <div>
                        @Model.User.Phone
                    </div>
                </div>
            </div><!-- /.box-body -->
            <div class="box-footer text-right">
                <a href="@Url.Action("View","User")/@Model.User.UserId">More</a>
            </div>
        </div><!-- /.box -->
        <!-- Location Info -->
        <div class="box box-danger">
            <div class="box-header">
                <h3 class="box-title">Location Info</h3>
            </div>
            <div class="box-body">
                @Html.HiddenFor(m => m.From.Latitude)
                @Html.HiddenFor(m => m.From.Longitude)
                @Html.HiddenFor(m => m.To.Latitude)
                @Html.HiddenFor(m => m.To.Longitude)
                @Html.HiddenFor(m => m.FromLocation)
                @Html.HiddenFor(m => m.ToLocation)

                <div class="form-group">
                    <div id="map" style="height: 350px;"></div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.FromLocation)
                    <div>
                        @Model.FromLocation (@Model.From.Latitude, @Model.From.Longitude)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ToLocation)
                    <div>
                        @Model.ToLocation (@Model.To.Latitude, @Model.To.Longitude)
                    </div>
                </div>
            </div><!-- /.box-body -->
        </div><!-- /.box -->
    </div><!-- /.right column -->
</div>

<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js"></script>
<script type="text/javascript">
    jQuery(document).ready(function () {
        var style = [{
            "stylers": [{
                "visibility": "off"
            }]
        }, {
            "featureType": "road",
            "stylers": [{
                "visibility": "on"
            }, {
                "color": "#ffffff"
            }]
        }, {
            "featureType": "road.arterial",
            "stylers": [{
                "visibility": "on"
            }, {
                "color": "#fee379"
            }]
        }, {
            "featureType": "road.highway",
            "stylers": [{
                "visibility": "on"
            }, {
                "color": "#fee379"
            }]
        }, {
            "featureType": "landscape",
            "stylers": [{
                "visibility": "on"
            }, {
                "color": "#f3f4f4"
            }]
        }, {
            "featureType": "water",
            "stylers": [{
                "visibility": "on"
            }, {
                "color": "#7fc8ed"
            }]
        }, {}, {
            "featureType": "road",
            "elementType": "labels",
            "stylers": [{
                "visibility": "off"
            }]
        }, {
            "featureType": "poi.park",
            "elementType": "geometry.fill",
            "stylers": [{
                "visibility": "on"
            }, {
                "color": "#83cead"
            }]
        }, {
            "elementType": "labels",
            "stylers": [{
                "visibility": "off"
            }]
        }, {
            "featureType": "landscape.man_made",
            "elementType": "geometry",
            "stylers": [{
                "weight": 0.9
            }, {
                "visibility": "off"
            }]
        }]

        //  Make an array of the LatLng's of the markers you want to show
        var LatLngList = new Array(new google.maps.LatLng($('#From_Latitude').val(), $('#From_Longitude').val()), new google.maps.LatLng($('#To_Latitude').val(), $('#To_Longitude').val()));
        //  Create a new viewpoint bound
        var bounds = new google.maps.LatLngBounds();
        //  Go through each...
        for (var i = 0, LtLgLen = LatLngList.length; i < LtLgLen; i++) {
            //  And increase the bounds to take this point
            bounds.extend(LatLngList[i]);
        }

        var options = {
            scrollwheel: false,
            zoom: 14,
            center: bounds.getCenter(),
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            styles: style
        };
        var map = new google.maps.Map($('#map')[0], options);
        //  Fit these bounds to the map
        map.fitBounds(bounds);

        var icons = [
            {
                url: '@Url.Content("~/Content/dist/img/marker-from.png")',
                origin: new google.maps.Point(0, 0)
            },
            {
                url: '@Url.Content("~/Content/dist/img/marker-to.png")',
                origin: new google.maps.Point(0, 0)
            }
        ];

        // Info Window Content
        var infoWindowContent = [
            ['Pickup at <label>' + $('#FromLocation').val() + '</label>'],
            ['Ended at <label>' + $('#ToLocation').val() + '</label>']
        ];
        
        // Display multiple markers on a map
        var infoWindow = new google.maps.InfoWindow(), marker, i;

        for (var i = 0, LtLgLen = LatLngList.length; i < LtLgLen; i++) {
            var marker = new google.maps.Marker({
                position: LatLngList[i],
                map: map,
                icon: icons[i],
            });
            
            // Allow each marker to have an info window    
            google.maps.event.addListener(marker, 'click', (function (marker, i) {
                return function () {
                    infoWindow.setContent(infoWindowContent[i][0]);
                    infoWindow.open(map, marker);
                }
            })(marker, i));
        }
    });
</script>

<!-- DATA TABES SCRIPT -->
<script src="@Url.Content("~/Content/plugins/datatables/jquery.dataTables.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/plugins/datatables/dataTables.bootstrap.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(function () {
        loadListTable();

        $("#tbl-list").on("click", "[name='assignBtn[]']", function () {
            var tr = $(this).closest("tr");
            var Id = tr.find("[name='Id[]']").val();

            window.location.href = "@Url.Action("DoAssign", "BookingTrx")?BookingId=@Model.BookingTrxId&DriverId=" + Id;
        })
    });

    function loadListTable() {
        var oTable = $("#tbl-list").DataTable({
            "bServerSide": true,
            "sAjaxSource": "@Url.Action("ListAvailableDriver", "Driver")?BookingId=@Model.BookingTrxId",
            "bProcessing": true,
            "iDisplayLength": 10,
            "aLengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
            "sDom": 'rpilt',
            "aaSorting": [[5, 'desc']],
            "aoColumns": [
                    {
                        "mData": "DriverId",
                        "sName": "DriverId",
                        "bSearchable": false,
                        "bSortable": false,
                        "fnRender": function (Obj) {
                            return "<input type='hidden' value='" + Obj.aData['DriverId'] + "' name='Id[]' />";
                        },
                        "sWidth": "0%"
                    },
                    {
                        "mData": "Name",
                        "sWidth": "35%"
                    },
                    {
                        "mData": "Phone",
                        "sWidth": "35%"
                    },
                    {
                        "mData": "CarPlateNo",
                        "sWidth": "25%"
                    },
                    {
                        "mData": "LastUpdated",
                        "sWidth": "25%"
                    },
                    {
                        "mData": null,
                        "bSortable": false,
                        "mRender": function (data, type, full) {
                            return '<a class="btn btn-sm btn-default" name="assignBtn[]">' +
                                '<i class="fa fa-check-circle"></i> Assign</a>';
                        },
                        "sWidth": "5%"
                    },
                    {
                        "mData": null,
                        "sName": "Nearest",
                        "bVisible": false
                    },
            ]
        });

        //add class to jquery.datatables filter
        $('.dataTables_length select').addClass("btn btn-default");
        $('.dataTables_filter input').addClass("form-control");

        $("#btn-refresh").click(function () {
            oTable.fnClearTable(true);
        });


        $("#btn-sort-nearest").click(function () {
            oTable.fnSort([[6, 'desc']]);
        });
        $("#btn-sort-lastupdated").click(function () {
            oTable.fnSort([[4, 'desc']]);
        });
    }
</script>